[{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":"id_0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":"id_1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":"id_2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":"id_3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":"id_4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":"id_5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"https://i2z1.github.io/airfleet/LICENSE.html","id":"id_6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"https://i2z1.github.io/airfleet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"i2z1. Maintainer.","code":""},{"path":"https://i2z1.github.io/airfleet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Z (2024). aiRfleet: Fleet device management API wrapper R. R package version 0.1.0, https://github.com/i2z1/airfleet, https://i2z1.github.io/airfleet/.","code":"@Manual{,   title = {aiRfleet: Fleet device management API wrapper for R},   author = {Ivan Z},   year = {2024},   note = {R package version 0.1.0, https://github.com/i2z1/airfleet},   url = {https://i2z1.github.io/airfleet/}, }"},{"path":"https://i2z1.github.io/airfleet/index.html","id":"airfleet-","dir":"","previous_headings":"","what":"Fleet device management API wrapper for R","title":"Fleet device management API wrapper for R","text":"Fleet device management API wrapper R. FleetDM centralized MDM open-source solution gathering hosts data via osquery presenting normalized table view. package inspired osqueryr R package.","code":""},{"path":"https://i2z1.github.io/airfleet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fleet device management API wrapper for R","text":"can install development version aiRfleet GitHub : ","code":"# install.packages(\"pak\") pak::pak(\"i2z1/airfleet\") # install.packages(\"devtools\") devtools::install_github(\"i2z1/airfleet\")"},{"path":[]},{"path":"https://i2z1.github.io/airfleet/index.html","id":"get-fleet-hosts-as-dataframe","dir":"","previous_headings":"Usage","what":"Get Fleet hosts as dataframe","title":"Fleet device management API wrapper for R","text":"","code":"flt_con <- flt_connection(host = Sys.getenv(\"FLEET_HOST\"),                           apitoken = Sys.getenv(\"FLEET_TOKEN\"))  hosts_df <- get_hosts(flt_con)"},{"path":"https://i2z1.github.io/airfleet/index.html","id":"list-fleet-queries","dir":"","previous_headings":"Usage","what":"List Fleet queries","title":"Fleet device management API wrapper for R","text":"","code":"queries_df = query_list(flt_con)"},{"path":"https://i2z1.github.io/airfleet/index.html","id":"create-query","dir":"","previous_headings":"Usage","what":"Create query","title":"Fleet device management API wrapper for R","text":"","code":"query_create(flt_con, name = \"users_qry\", query = \"SELECT * from users;\")"},{"path":"https://i2z1.github.io/airfleet/index.html","id":"delete-query","dir":"","previous_headings":"Usage","what":"Delete query","title":"Fleet device management API wrapper for R","text":"","code":"query_delete(flt_con, id=51)"},{"path":"https://i2z1.github.io/airfleet/reference/flt_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Make connection object — flt_connection","title":"Make connection object — flt_connection","text":"Make connection object","code":""},{"path":"https://i2z1.github.io/airfleet/reference/flt_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make connection object — flt_connection","text":"","code":"flt_connection(host = \"127.0.0.1\", port = 443, apitoken)"},{"path":"https://i2z1.github.io/airfleet/reference/flt_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make connection object — flt_connection","text":"host Fleet host port Fleet port (default 443) apitoken Fleet instance API token","code":""},{"path":"https://i2z1.github.io/airfleet/reference/flt_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make connection object — flt_connection","text":"con object","code":""},{"path":"https://i2z1.github.io/airfleet/reference/get_hosts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fleet's registered hosts — get_hosts","title":"Get Fleet's registered hosts — get_hosts","text":"Get Fleet's registered hosts","code":""},{"path":"https://i2z1.github.io/airfleet/reference/get_hosts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fleet's registered hosts — get_hosts","text":"","code":"get_hosts(flt_con)"},{"path":"https://i2z1.github.io/airfleet/reference/get_hosts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fleet's registered hosts — get_hosts","text":"flt_con connection object","code":""},{"path":"https://i2z1.github.io/airfleet/reference/get_hosts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Fleet's registered hosts — get_hosts","text":"df","code":""},{"path":"https://i2z1.github.io/airfleet/reference/make_flt_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate request to API endpoint — make_flt_req","title":"Generate request to API endpoint — make_flt_req","text":"Generate request API endpoint","code":""},{"path":"https://i2z1.github.io/airfleet/reference/make_flt_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate request to API endpoint — make_flt_req","text":"","code":"make_flt_req(endpoint, flt_con, rtype = \"GET\", req_params = list())"},{"path":"https://i2z1.github.io/airfleet/reference/make_flt_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate request to API endpoint — make_flt_req","text":"endpoint string, API path params flt_con connection object via flt_connection() rtype request type req_params list request params","code":""},{"path":"https://i2z1.github.io/airfleet/reference/make_flt_req.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate request to API endpoint — make_flt_req","text":"list deJSONed object","code":""},{"path":"https://i2z1.github.io/airfleet/reference/query_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Fleet query by id — query_delete","title":"Delete Fleet query by id — query_delete","text":"Delete Fleet query id","code":""},{"path":"https://i2z1.github.io/airfleet/reference/query_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Fleet query by id — query_delete","text":"","code":"query_delete(flt_con, id)"},{"path":"https://i2z1.github.io/airfleet/reference/query_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Fleet query by id — query_delete","text":"flt_con connection object via flt_connection() id Fleet query id, can fetched via query_list() function","code":""},{"path":"https://i2z1.github.io/airfleet/reference/query_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Fleet query by id — query_delete","text":"TRUE success, else FALSE","code":""},{"path":"https://i2z1.github.io/airfleet/reference/query_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List queries — query_list","title":"List queries — query_list","text":"List queries","code":""},{"path":"https://i2z1.github.io/airfleet/reference/query_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List queries — query_list","text":"","code":"query_list(flt_con, req_params = list())"},{"path":"https://i2z1.github.io/airfleet/reference/query_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List queries — query_list","text":"flt_con connection object via flt_connection() req_params opt, provided specifies extra params, .e. req_params = list(query = \"darwin\", order_direction = \"desc\")","code":""},{"path":"https://i2z1.github.io/airfleet/reference/query_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List queries — query_list","text":"df","code":""}]
